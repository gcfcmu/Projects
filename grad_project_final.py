# -*- coding: utf-8 -*-
"""grad project final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sIBSYjpH2FZ-W5GXbfiiYdbkQGWrfTxm
"""

!pip install scanpy

import scanpy

#from google.colab import drive
#drive.mount('/content/drive')

#data = scanpy.read_mtx("/content/drive/MyDrive/matrix.mtx")

import pandas

#cluster = scanpy.read_csv("/content/drive/MyDrive/GEB/cluster_file.csv")

import anndata

#genes = pandas.read_csv("/content/drive/MyDrive/GEB/genes.tsv", sep = "\t", header = None)
import os
os.getcwd()

data2 = scanpy.read_10x_mtx("GEB/", gex_only = False)

meta = pandas.read_csv("GEB/metadata.csv")

l = []
for i in range(0,len(meta["cell_type__ontology_label"])):
    l.append(meta["cell_type__ontology_label"][i])
    
    
data2.obs["cell"] = l

scanpy.pp.neighbors(data2)

scanpy.tl.umap(data2)

scanpy.pl.umap(data2, color = "cell")

#scanpy.tl.rank_genes_groups(data2, groupby="cell", method="t-test")

scanpy.tl.rank_genes_groups(data2,groupby="cell",method="logreg")

result = data2.uns["rank_genes_groups"]



scanpy.pl.heatmap(data2, var_names = data2.var_names, groupby="cell", vmax = 30.0)

scanpy.pl.heatmap(data2, var_names = data2.var_names, groupby="cell", log=True)

display(data2.obsm["X_pca"])

scanpy.tl.dendrogram(data2, groupby="cell")

scanpy.pl.dendrogram(data2, groupby="cell")

scanpy.pl.pca(data2, color="cell")

scanpy.pl.stacked_violin(data2, var_names = data2.var_names[1:10],  groupby = "cell", figsize=(20,15))

scanpy.pl.stacked_violin(data2, var_names = "Clasp2",  groupby = "cell", figsize=(20,15))

scanpy.tl.rank_genes_groups(data2 ,groupby="cell", method="wilcoxon")